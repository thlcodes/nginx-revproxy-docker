// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	greeter "dev.beta.audi/gorepo/lib_proto_models/golib/greeter"
	mock "github.com/stretchr/testify/mock"

	models "dev.beta.audi/gorepo/gopher_skeleton/internal/models"
)

// GreeterUsecases is an autogenerated mock type for the GreeterUsecases type
type GreeterUsecases struct {
	mock.Mock
}

// GetFallbackName provides a mock function with given fields: ctx
func (_m *GreeterUsecases) GetFallbackName(ctx *models.Context) (string, error) {
	ret := _m.Called(ctx)

	var r0 string
	if rf, ok := ret.Get(0).(func(*models.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Reset provides a mock function with given fields: ctx
func (_m *GreeterUsecases) Reset(ctx *models.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SayHello provides a mock function with given fields: ctx, name
func (_m *GreeterUsecases) SayHello(ctx *models.Context, name string) (*greeter.Message, error) {
	ret := _m.Called(ctx, name)

	var r0 *greeter.Message
	if rf, ok := ret.Get(0).(func(*models.Context, string) *greeter.Message); ok {
		r0 = rf(ctx, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*greeter.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetFallbackName provides a mock function with given fields: ctx, name
func (_m *GreeterUsecases) SetFallbackName(ctx *models.Context, name string) error {
	ret := _m.Called(ctx, name)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Context, string) error); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
