// Code generated by genfig plugin 'write_to_env'; DO NOT EDIT.

package config

import (
	"encoding/json"
	"fmt"
	"os"
)

var (
	_ = os.Setenv
	_ = fmt.Sprintf
	_ = json.Marshal
)

func (c *Config) WriteToEnv() {
	var buf []byte
	_ = buf

	_ = os.Setenv("APIPATH", fmt.Sprintf("%v", c.Apipath))

	_ = os.Setenv("BASEPATH", fmt.Sprintf("%v", c.Basepath))

	_ = os.Setenv("DEBUG", fmt.Sprintf("%v", c.Debug))

	_ = os.Setenv("GRPCPORT", fmt.Sprintf("%v", c.GrpcPort))

	_ = os.Setenv("HOST", fmt.Sprintf("%v", c.Host))

	_ = os.Setenv("PORT", fmt.Sprintf("%v", c.Port))

	_ = os.Setenv("SERVICE_NAME", fmt.Sprintf("%v", c.Service.Name))

	_ = os.Setenv("SERVICE_VERSION", fmt.Sprintf("%v", c.Service.Version))

	_ = os.Setenv("SERVICES_REGISTRY", fmt.Sprintf("%v", c.Services.Registry))

	_ = os.Setenv("SERVICES_STORAGE_ADDR", fmt.Sprintf("%v", c.Services.Storage.Addr))

	_ = os.Setenv("TRACE", fmt.Sprintf("%v", c.Trace))

	_ = os.Setenv("TRACING_SECRET", fmt.Sprintf("%v", c.Tracing.Secret))

	_ = os.Setenv("TRACING_SERVICE", fmt.Sprintf("%v", c.Tracing.Service))

	_ = os.Setenv("TRACING_URI", fmt.Sprintf("%v", c.Tracing.Uri))

}
